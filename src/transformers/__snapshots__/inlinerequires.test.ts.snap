// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`doesn't break when required modules are names elsewhere 1`] = `
Object {
  "code": "
var x = {
    require('path'): 42
};
x.require('path').toString();
",
  "sourceMap": Object {
    "line 1": "[1,0 => 3,0], [1,4 => 3,6], [1,5 => 3,7], [1,8 => 3,10]",
    "line 2": "[2,4 => 4,1], [2,19 => 4,5], [2,21 => 4,7], [2,23 => 4,9]",
    "line 3": "[3,1 => 5,1], [3,2 => 5,1]",
    "line 4": "[4,0 => 7,0], [4,1 => 7,1], [4,2 => 7,2], [4,17 => 7,6], [4,18 => 7,7], [4,26 => 7,15], [4,28 => 7,17], [4,29 => 7,17]",
  },
}
`;

exports[`doesn't break with empty source files 1`] = `
Object {
  "code": "
",
  "sourceMap": Object {},
}
`;

exports[`element access 1`] = `
Object {
  "code": "
var other = { require('key'): 42 };
var foo = (_a = {},
    _a[require('key').two] = true,
    _a[other] = true,
    _a[other.require('key')] = true,
    _a);
function Test(props) {
    return (React.createElement('div', null,
        React.createElement(require('key').two, null),
        React.createElement(other.require('key'), null)));
}
var _a;
",
  "sourceMap": Object {
    "line 1": "[1,0 => 2,0], [1,4 => 2,6], [1,9 => 2,11], [1,12 => 2,14], [1,14 => 2,16], [1,28 => 2,19], [1,30 => 2,21], [1,32 => 2,23], [1,34 => 2,25], [1,35 => 2,26]",
    "line 10": "[10,8 => 14,3], [10,28 => 14,4], [10,33 => 14,9], [10,34 => 14,10], [10,48 => 14,13], [10,55 => 14,16], [10,56 => 15,8], [10,57 => 16,2], [10,58 => 16,2]",
    "line 11": "[11,0 => 17,0], [11,1 => 17,1]",
    "line 2": "[2,0 => 4,0], [2,4 => 4,6], [2,7 => 4,9]",
    "line 3": "[3,4 => 5,1], [3,7 => 5,2], [3,21 => 5,5], [3,22 => 5,6], [3,25 => 5,9], [3,29 => 5,12], [3,33 => 5,16]",
    "line 4": "[4,4 => 6,1], [4,7 => 6,2], [4,12 => 6,7], [4,16 => 6,10], [4,20 => 6,14]",
    "line 5": "[5,4 => 7,1], [5,7 => 7,2], [5,12 => 7,7], [5,13 => 7,8], [5,27 => 7,11], [5,31 => 7,14], [5,35 => 7,18]",
    "line 6": "[6,7 => 8,1], [6,8 => 8,1]",
    "line 7": "[7,0 => 10,0], [7,14 => 10,14], [7,19 => 10,19]",
    "line 8": "[8,4 => 11,1], [8,10 => 11,7], [8,11 => 11,8], [8,12 => 12,2]",
    "line 9": "[9,8 => 13,3], [9,28 => 13,4], [9,42 => 13,7], [9,43 => 13,8], [9,46 => 13,11], [9,53 => 13,14]",
  },
}
`;

exports[`functions 1`] = `
Object {
  "code": "
function FOO() { }
function foo(FOO) { }
function foo(FOO) { }
",
  "sourceMap": Object {
    "line 1": "[1,0 => 3,0], [1,17 => 3,16], [1,18 => 3,17]",
    "line 2": "[2,0 => 4,0], [2,13 => 4,13], [2,16 => 4,16], [2,20 => 4,19], [2,21 => 4,20]",
    "line 3": "[3,0 => 5,0], [3,13 => 5,13], [3,16 => 5,21], [3,20 => 5,24], [3,21 => 5,25]",
  },
}
`;

exports[`inlines requires for aliases 1`] = `
Object {
  "code": "
var alias = require('path');
alias.resolve('a');
function foo(value) {
    var alias = require('path');
    alias.resolve('b');
}
",
  "sourceMap": Object {
    "line 1": "[1,0 => 3,0], [1,4 => 3,6], [1,9 => 3,11], [1,12 => 3,14], [1,27 => 3,18], [1,28 => 3,18]",
    "line 2": "[2,0 => 4,0], [2,5 => 4,5], [2,6 => 4,6], [2,13 => 4,13], [2,14 => 4,14], [2,17 => 4,17], [2,18 => 4,18], [2,19 => 4,18]",
    "line 3": "[3,0 => 6,0], [3,13 => 6,13], [3,18 => 6,18]",
    "line 4": "[4,4 => 7,1], [4,8 => 7,7], [4,13 => 7,12], [4,16 => 7,15], [4,31 => 7,19], [4,32 => 7,19]",
    "line 5": "[5,4 => 8,1], [5,9 => 8,6], [5,10 => 8,7], [5,17 => 8,14], [5,18 => 8,15], [5,21 => 8,18], [5,22 => 8,19], [5,23 => 8,19]",
    "line 6": "[6,0 => 9,0], [6,1 => 9,1]",
  },
}
`;

exports[`inlines requires for calls 1`] = `
Object {
  "code": "
var not = {
    require('some-function'): function () { }
};
require('some-function')();
not.sumFunction();
function foo(value) {
    return require('some-function')();
}
",
  "sourceMap": Object {
    "line 1": "[1,0 => 2,0], [1,4 => 2,6], [1,7 => 2,9], [1,10 => 2,12]",
    "line 2": "[2,4 => 3,1], [2,28 => 3,13], [2,30 => 3,15], [2,44 => 3,23], [2,45 => 3,24]",
    "line 3": "[3,1 => 4,1], [3,2 => 4,1]",
    "line 4": "[4,0 => 6,0], [4,24 => 6,12], [4,26 => 6,14], [4,27 => 6,14]",
    "line 5": "[5,0 => 7,0], [5,3 => 7,3], [5,4 => 7,4], [5,15 => 7,15], [5,17 => 7,17], [5,18 => 7,18]",
    "line 6": "[6,0 => 9,0], [6,13 => 9,13], [6,18 => 9,18]",
    "line 7": "[7,4 => 10,1], [7,10 => 10,7], [7,11 => 10,8], [7,35 => 10,20], [7,37 => 10,22], [7,38 => 10,22]",
    "line 8": "[8,0 => 11,0], [8,1 => 11,1]",
  },
}
`;

exports[`inlines requires for initializers 1`] = `
Object {
  "code": "
function foo(bar, a, b) {
    if (a === void 0) { a = require('some-function'); }
    if (b === void 0) { b = require('some-function')(); }
    var _a = bar[0].c, c = _a === void 0 ? require('some-function') : _a;
    return c;
}
var bar = (function () {
    function bar() {
        this.x = require('some-function');
        this.y = require('some-function')();
    }
    return bar;
}());
",
  "sourceMap": Object {
    "line 1": "[1,0 => 3,0], [1,13 => 3,13], [1,16 => 3,21], [1,18 => 3,23], [1,19 => 3,39], [1,21 => 3,41], [1,22 => 3,59]",
    "line 10": "[10,8 => 10,11], [10,14 => 10,12], [10,17 => 10,15], [10,41 => 10,27], [10,43 => 10,29], [10,44 => 10,29]",
    "line 11": "[11,4 => 11,0], [11,5 => 11,1]",
    "line 12": "[12,4 => 11,0], [12,14 => 11,1]",
    "line 13": "[13,0 => 11,0], [13,1 => 8,0], [13,1 => 11,1], [13,5 => 11,1]",
    "line 2": "[2,4 => 3,23], [2,22 => 3,23], [2,24 => 3,23], [2,52 => 3,39]",
    "line 3": "[3,4 => 3,41], [3,22 => 3,41], [3,24 => 3,41], [3,28 => 3,45], [3,52 => 3,57], [3,54 => 3,59]",
    "line 4": "[4,4 => 4,10], [4,8 => 4,10], [4,21 => 4,26], [4,23 => 4,10], [4,72 => 4,26], [4,73 => 4,35]",
    "line 5": "[5,4 => 5,1], [5,10 => 5,7], [5,11 => 5,8], [5,12 => 5,9], [5,13 => 5,9]",
    "line 6": "[6,0 => 6,0], [6,1 => 6,1]",
    "line 7": "[7,0 => 8,0]",
    "line 8": "[8,4 => 8,0]",
    "line 9": "[9,8 => 9,9], [9,14 => 9,10], [9,17 => 9,13], [9,41 => 9,25], [9,42 => 9,25]",
  },
}
`;

exports[`inlines requires for property access 1`] = `
Object {
  "code": "
var a = require('path').resolve('a');
foo(require('path').resolve('b'));
function foo(value) {
    return require('path').resolve('c');
}
",
  "sourceMap": Object {
    "line 1": "[1,0 => 2,0], [1,4 => 2,6], [1,5 => 2,7], [1,8 => 2,10], [1,23 => 2,14], [1,24 => 2,15], [1,31 => 2,22], [1,32 => 2,23], [1,35 => 2,26], [1,36 => 2,27], [1,37 => 2,27]",
    "line 2": "[2,0 => 3,0], [2,3 => 3,3], [2,4 => 3,4], [2,19 => 3,8], [2,20 => 3,9], [2,27 => 3,16], [2,28 => 3,17], [2,31 => 3,20], [2,32 => 3,21], [2,33 => 3,22], [2,34 => 3,22]",
    "line 3": "[3,0 => 5,0], [3,13 => 5,13], [3,18 => 5,18]",
    "line 4": "[4,4 => 6,1], [4,10 => 6,7], [4,11 => 6,8], [4,26 => 6,12], [4,27 => 6,13], [4,34 => 6,20], [4,35 => 6,21], [4,38 => 6,24], [4,39 => 6,25], [4,40 => 6,25]",
    "line 5": "[5,0 => 7,0], [5,1 => 7,1]",
  },
}
`;

exports[`works with JSX elements 1`] = `
Object {
  "code": "
var Local = function (props) { return React.createElement('div', null); };
function Test(props) {
    return (React.createElement('div', null,
        React.createElement(require('Component'), { prop: 42 }),
        React.createElement(Local, null)));
}
",
  "sourceMap": Object {
    "line 1": "[1,0 => 2,0], [1,4 => 2,6], [1,9 => 2,11], [1,12 => 2,14], [1,22 => 2,15], [1,27 => 2,20], [1,31 => 2,25], [1,38 => 2,25], [1,70 => 2,31], [1,72 => 2,25], [1,73 => 2,31], [1,74 => 2,32]",
    "line 2": "[2,0 => 4,0], [2,14 => 4,14], [2,19 => 4,19]",
    "line 3": "[3,4 => 5,1], [3,10 => 5,7], [3,11 => 5,8], [3,12 => 6,2]",
    "line 4": "[4,8 => 7,3], [4,28 => 7,4], [4,48 => 7,13], [4,52 => 7,14], [4,56 => 7,18], [4,58 => 7,21], [4,60 => 7,23], [4,63 => 7,28]",
    "line 5": "[5,8 => 8,3], [5,28 => 8,4], [5,33 => 8,9], [5,40 => 8,12], [5,41 => 9,8], [5,42 => 10,2], [5,43 => 10,2]",
    "line 6": "[6,0 => 11,0], [6,1 => 11,1]",
  },
}
`;

exports[`works with things named require 1`] = `
Object {
  "code": "
var require = 42;
parseInt(require, 10);
function require(x) {
    return x.require;
}
",
  "sourceMap": Object {
    "line 1": "[1,0 => 1,0], [1,4 => 1,4], [1,11 => 1,11], [1,14 => 1,14], [1,16 => 1,16], [1,17 => 1,16]",
    "line 2": "[2,0 => 2,0], [2,8 => 2,8], [2,9 => 2,9], [2,16 => 2,16], [2,18 => 2,18], [2,20 => 2,20], [2,21 => 2,21], [2,22 => 2,21]",
    "line 3": "[3,0 => 3,0], [3,17 => 3,17], [3,18 => 3,23]",
    "line 4": "[4,4 => 4,1], [4,10 => 4,7], [4,11 => 4,8], [4,12 => 4,9], [4,13 => 4,10], [4,20 => 4,17], [4,21 => 4,17]",
    "line 5": "[5,0 => 5,0], [5,1 => 5,1]",
  },
}
`;
